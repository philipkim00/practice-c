#include <stdio.h>

int main_c(void)
{
	// 자료형 : 변수가 어떠한 형태를 나타내는지를 설명해주는 역할이 자료형에 역할.
	// : (크기단위, byte) Date Type
	// 정수형 : char(1) , short(2), int(4) , long(4) , long long(8) ,더있슴
	// 실수형 : float(4), double(8)

	int i = 0;
	// 1.i안에 들어가는 데이터는 정수 표현방식을 따른다. 2. i라는 변수의 크기는 4바이트이다.

	// 1 바이트로 양수만 표현
	// 256가지 -> 0~255
	unsigned char c = 0; // 1바이트 양의 정수만 내포하는 자료형.
	c = 0;
	c = 255;
	c = 256; //짤려서 못들어옴. 


	//바이트 양수, 음수 둘다 표현
	// -128 ~ 0 ~ 127 
	/*signed*/ char c1 = 0;
	//signed 키워드가 기본적으로 생략되있고 음수 양수 둘다표현하지만 기본적인 전제라 적지는않음.
	c = -1;

	// 음의 정수 찾기(2의 보수법)
	// 대응되는 양수의 부호를 반전 후, 1을 더한다.


	return 0;
}

/*
우리컴퓨터에서 음수를 어떻게 표현할까 ?
컴퓨터는 기본적으로 우리가 입력한 값이 있으면 그 값을 그대로 입력받는 것이 아닌 컴퓨터가 읽을 수 있는 수로
변환되어 해석한다.그렇기 때문에 우리가 특정 값을 입력해도 컴퓨터는 다른 값으로 해석할 수 있다.

음수까지 포함한다면 음의 정수 128개 0포함 양의정수 128개가 나온다.

컴퓨터는에서 1바이트는 256개의 표현을한다.
양수만 표현하면 255까지 입력이 가능하다.
하지만 1바이트가 양수, 음수 둘다 표현할려고한다면 ?
-128~0 ~127로 표현

표현할 수 있는 수의 크기는 자료형의 Byte 크기 값에 따라 달라진다.
(2바이트는(short) 2 ^ 16 3만~3만 까지 가능. 4바이트는 2 ^ 32 - 21~21억까지 가능)

최상위비트(MSB)
컴퓨터는 우리가 1을 입력해도 곧이곧대로 1로써 받아들이는 게 아닌, 1이라는 숫자의 Bit값으로 해석한다.
예) 1을 Bit 값으로 표현한다면('0', '0', '0', '0', '0', '0', '0', '1') 이다.
양수는 비트값 앞에 자리가 0이고 숫자 0의 비트는('0', '0', '0', '0', '0', '0', '0', '0')이다.
음수를 표현하는 비트값은 앞에 자리가 1이다.
예) ('1', '1', '1', '1', '1', '1', '1', '1') < --1의 비트이다.
	가장 앞에 있는 비트값이 0과 1에 따라 양수와 음수가 정해진다.
	Bit 가장 앞에 있는 숫자를 최상위비트(MSB(most significant bit))라고 한다.

	비트 가장 앞자리의 있는 수를 최상위 비트(MSB)라고 하고 이 최상위 비트에 따라 양수인지 음수인지가 정해진다.

	컴퓨터는 우리가 1을 입력해도 곧이곧대로 1로써 받아들이는 게 아닌,
	1이라는 숫자가 Bit로 변환되어 컴퓨터에게 입력된다.그리고 컴퓨터는 그 Bit를 해석한다.
	예) char c1 = 0;
	c1 = 1; < -이렇게 컴퓨터에게 입력을 하면 1이란 숫자를 입력하는게 아니라
		비트('0', '0', '0', '0', '0', '0', '0', '1')를 컴퓨터에게 입력하고 컴퓨터는 Bit를 해석한 뒤 1이라는 숫자를 출력한 것이다.
		또다른 예시로
		예) char c1 = 0;
		c1 = 255; < -이런 식을 입력하면 컴퓨터는 곧이곧대로 255라는 숫자를 입력 받은 게 아니라
			비트('1', '1', '1', '1', '1', '1', '1', '1')를 입력받은 것이다.그렇기 때문에 나는 컴퓨터에게 255를 입력했어도
			컴퓨터는 이 숫자를 - 1로 해석한다.
			(비트('1', '1', '1', '1', '1', '1', '1', '1')은 - 1이다.)
			추가로.
			unsigned char c = 0;
		c = 255;

		char c1 = 0;
		c = 255;
		c = -1;
		두개의 메모리 상태는 똑같다. 1 1 1 1 1 1 1 1

			뺼셈은 컴퓨터에서 음수의 덧셈이라 생각.
			1 + (-1) = 0
			127 + (-127) = 0
			이런식으롱.

			unsigned char c = 0;
		c = 255;
		char c1 = 0;
		c = 255;
		c = -1;
		두개의 메모리 상태는 똑같다. 1 1 1 1 1 1 1 1
			동일한 메모리 크기 공간에 동일한 값이 채워졌어도
			이걸 어떻게 해석하느냐의 따라 받아들여지는게 다르다.!
			ex) 아빠라는 사람이 있다.
			나의 할아버지는 아버지를 아들로 보고
			나는 아빠라고 보지만
			아빠는 똑같은 사람이다.관점에 따라 다른 해석의 차이.
			0 0 0 0 0 0 1 0 = 2 -> 1 1 1 1 1 1 0 1 -> 1 1 1 1 1 1 1 0 = -2
			1. 2진법으로 표현된 양의 정수를 반전시킨다.
			2. 그리고 맨뒤 비트에 1을 미리 더하면 2진법으로 표현된 음의정수를 구할수 있다.

			만렙 스탯이 255인 고전 게임들이있다..
			왜그렇까 ?
			스탯 저장하는 걸 char로 했당.

			*/