#include <stdio.h>

int Add(int a, int b)
{
	return a + b;
}

// 함수
int main()
{
	printf("output Test");
	

	int iData = Add(100, 200);

	// 반복문 
	for (/*반복자 초기화*/;/*반복자 조건 체크*/;/*반복자 변경*/)
	{

	}

	
	for (int i = 0; i < 10; ++i)
	{
		i; //for 괄호 안에 i
	}

	// while()

	return 0;
}


/*
int Add(int a, int b)
{
	return a + b;
}

// 함수
int main()
{
	int iData = Add(100, 200);

	// 반복문


	return 0;
}
코드해석
Add(더하기)기능을 함수로 만들어 놓고 둘의 덧셈 결과를 반한받아서
메인함수에 전달받아서 iData라는 변수에 값을 집어 넣은것.

함수가 2가지 메인함수(주) Add함수
프로그램 실행
메인함수(첫번쨰 함수) 호출-> 또다른 함수인 Add함수 호출 ->
Add 종료 -> 메인함수 종료(return 0;)


 어떤 프로그램을 실행시켰을떄 종료 하는것아니면 대부분 프로그램은 계속 실행됨.
 이것이 계속 실행되는 이유.
 종료될수 없게 장치가있음.
반복문!!

반복문
어떤 조건을 주고 그 조건 이 완료되기전까지 일정구간을 반복하는것.
for()
while()
둘다 상황에 맞춰서 쓰면된다.(경험하면서)

	for(/*반복자 초기화*/;/*반복자 조건 체크*/;/*반복자 변경*/ //)
/*	{

	}
	횟수 체크하는  반복자 변수 를초기화 부분은 딱 한번만 실행된다.

		int i = 0;

	for (int i = 0;)
	{
		i 
	}
	대괄호안에있는 i는 for사이에 잇는 i이다. 밖에 선언된 i가 아니라.(변수명 규칙)

	반복자 조건 체크
	조건이 틀릴 경우 더이상 돌리지않는다.
	참 거짓이 들어감 
	참이 들어가면 돌고
	거짓들어가면 더이상 돌지않음.

	반복자 변경
	조건 체크가 매번 같지 않을려면 반복자 변수가 값이 바뀌어야 
	그래야 조건에 결과가 바뀔 여지가 생긴다.
	항상 참이면 무한으로 그 반복문을 반복하기 떄문에 문제가 생긴다.
	프로그래밍 흐름이 안바껴서 다른 코드들이 작동을 못하게된다.
	그래서 변경될수 있어야 조건 체크 여지를준다.
	

	for문 작동하는 순서.
	for (int i = 0; i < 10; ++i)
	{
		i; //for 괄호 안에 i
	}
	1. int i = 0 i를 0으로 초기화함
	2. 조건의 체크로 가서 조건 참 거짓 확인
	3. 참
	4. 내부 구문은 수행됨 여기서는 i = 0 
	5. ++i를 해서 i를 1로만들고 
	6. 조건 체크 참 거짓확인
	~~~  i의 조건이 i < 10이기떄문에 
	i = 10이 되면 실행안하고 나감.

	표준 입출력 함수. 
	printf();
	scanf();
	이 두 함수는 #include <stdio.h> 이미 구현된 라이브러리 포함된 함수이다.

	내가 만든 함수만 쓰는게 아니라 필수적으로 사용하는 프로그래 구현한느게아니라
	라이브러리라고해서 필수적 기능을 제공받아서 쓸것이다.

	printf("");
	프린트 함수는 이 쌍따음표안에 적은 문자열 를 실행시키면 뜨는 창에 뜨게해준다.


*/